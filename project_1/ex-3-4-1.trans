
---------------------------------------------------------------------
       HOL-4 [Kananaskis 11 (stdknl, built Sat Aug 19 09:30:06 2017)]

       For introductory HOL help, type: help "hol";
       To exit type <Control>-D
---------------------------------------------------------------------
> > > > poly: : error: Pattern and expression have incompatible types.
   Pattern: (a, b, c, d) : 'a * 'b * 'c * 'd
   Expression: [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, ...)] :
      (int * string) list
   Reason:
      Can't unify (int * string) list to 'a * 'b * 'c * 'd
         (Incompatible types)
Found near val (a, b, c, ...) = [(0, "Alice"), (1, ...), (...), ...]
Static Errors
> # # # # val a = (0, "Alice"): int * string
val b = (1, "Bob"): int * string
val c = (3, "Carol"): int * string
val d = (4, "Dan"): int * string
val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Value or constructor (elb) has not been declared
Found near (0, elb :: [], b, c, d)
Static Errors
> # # # # val a = (0, "Alice"): int * string
val b = (1, "Bob"): int * string
val c = (3, "Carol"): int * string
val d = (4, "Dan"): int * string
val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: ) expected but ; was found
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = [(0, "Alice")]: (int * string) list
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Type error in function application.
   Function: elB : int * string
   Argument: [1] : int list
   Reason: Value being applied does not have a function type
Found near (0, elB [1], b, c, d)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = (0, "Alice"): int * string
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Type error in function application.
   Function: :: : (int * string) * (int * string) list -> (int * string) list
   Argument: (elB, 0) : (int * string) * int
   Reason:
      Can't unify int (*In Basis*) with (int * string) list (*In Basis*)
         (Different type constructors)
Found near (0, elB :: 0, b, c, d)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = [(0, "Alice")]: (int * string) list
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Pattern and expression have incompatible types.
   Pattern: (elC1, elC2 :: [], elC3, elC4, elC5) :
      int * 'a list * 'b * 'c * 'd
   Expression: (0, elB, b, c, d) :
      int * (int * string) * (int * string) * (int * string) * (int * string)
   Reason: Can't unify 'a list to int * string (Incompatible types)
Found near val (elC1, elC2 :: [...], elC3, ...) = (0, elB, b, ...)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Pattern and expression have incompatible types.
   Pattern: (elC1, elC2 :: t, elC3, elC4, elC5) :
      int * 'a list * 'b * 'c * 'd
   Expression: (0, elB, b, c, d) :
      int * (int * string) * (int * string) * (int * string) * (int * string)
   Reason: Can't unify 'a list to int * string (Incompatible types)
Found near val (elC1, elC2 :: t, elC3, ...) = (0, elB, b, ...)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Type error in function application.
   Function: :: : (int * string) * (int * string) list -> (int * string) list
   Argument: (elB, "Alice") : (int * string) * string
   Reason:
      Can't unify (int * string) list (*In Basis*) with string (*In Basis*)
         (Different type constructors)
Found near (0, elB :: "Alice", b, c, d)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = (0, "Alice"): int * string
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Pattern and expression have incompatible types.
   Pattern: (elC1, (elC2, []), elC3, elC4, elC5) :
      int * (int * 'a list) * 'b * 'c * 'd
   Expression: (0, elC2, b, c, d) :
      int * (int * string) * (int * string) * (int * string) * (int * string)
   Reason:
      Can't unify 'a list (*In Basis*) with string (*In Basis*)
         (Different type constructors)
Found near val (elC1, (elC2, ...), elC3, ...) = (0, elC2, b, ...)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = 0: int
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
val x = "Alice": string
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Pattern expected but , was found
poly: : error: Pattern expected but , was found
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : warning: (::) has infix status but was not preceded by op.
poly: : error: Pattern and expression have incompatible types.
   Pattern: (elC1, (:: elC2), elC3, elC4, elC5) :
      int * 'a list * 'b * 'c * 'd
   Expression: (0, elC2, b, c, d) :
      int * int * (int * string) * (int * string) * (int * string)
   Reason:
      Can't unify 'a list (*In Basis*) with int (*In Basis*)
         (Different type constructors)
Found near val (elC1, (:: elC2), elC3, ...) = (0, elC2, b, ...)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> poly: : error: Pattern and expression have incompatible types.
   Pattern: (elC1, ([] :: elC2), elC3, elC4, elC5) :
      int * 'a list list * 'b * 'c * 'd
   Expression: (0, elB, b, c, d) :
      int * (int * string) * (int * string) * (int * string) * (int * string)
   Reason: Can't unify 'a list list to int * string (Incompatible types)
Found near val (elC1, ([...] :: elC2), elC3, ...) = (0, elB, b, ...)
Static Errors
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = (0, "Alice"): int * string
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
> val a = (0, "Alice"): int * string
> val b = (1, "Bob"): int * string
> val c = (3, "Carol"): int * string
> val d = (4, "Dan"): int * string
> val listA = [(0, "Alice"), (1, "Bob"), (3, "Carol"), (4, "Dan")]:
   (int * string) list
> val elB = (0, "Alice"): int * string
> val listB = ((1, "Bob"), (3, "Carol"), (4, "Dan")):
   (int * string) * (int * string) * (int * string)
> val elC1 = 0: int
val elC2 = "Alice": string
val elC3 = (1, "Bob"): int * string
val elC4 = (3, "Carol"): int * string
val elC5 = (4, "Dan"): int * string
> 